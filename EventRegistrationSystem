import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class EventRegistrationSystem extends JFrame implements ActionListener {
    private JTextField eventNameField, dateField, timeField, maxPeopleField, nameField, ageField;
    private JComboBox<String> guestTypeBox;
    private JButton createEventButton, editEventButton, addGuestButton, editGuestButton;
    private JTextArea guestListArea;
    private List<Guest> guestList;

    public EventRegistrationSystem() {
        setLayout(new GridLayout(7, 2));

        add(new JLabel("Event Name"));
        eventNameField = new JTextField(15);
        add(eventNameField);

        add(new JLabel("Date"));
        dateField = new JTextField(10);
        add(dateField);

        add(new JLabel("Time"));
        timeField = new JTextField(5);
        add(timeField);

        add(new JLabel("Max People"));
        maxPeopleField = new JTextField(5);
        add(maxPeopleField);

        add(new JLabel("Name"));
        nameField = new JTextField(15);
        add(nameField);

        add(new JLabel("Age"));
        ageField = new JTextField(3);
        add(ageField);

        add(new JLabel("Guest Type"));
        String[] guestTypes = {"VIP", "Special", "Normal"};
        guestTypeBox = new JComboBox<>(guestTypes);
        add(guestTypeBox);

        add(new JLabel(""));
        createEventButton = new JButton("Create Event");
        createEventButton.addActionListener(this);
        add(createEventButton);

        add(new JLabel(""));
        editEventButton = new JButton("Edit Event");
        editEventButton.addActionListener(this);
        add(editEventButton);

        add(new JLabel(""));
        addGuestButton = new JButton("Add Guest");
        addGuestButton.addActionListener(this);
        add(addGuestButton);

        add(new JLabel(""));
        editGuestButton = new JButton("Edit Guest");
        editGuestButton.addActionListener(this);
        add(editGuestButton);

        add(new JLabel("Guest List"));
        guestListArea = new JTextArea(10, 20);
        add(guestListArea);

        guestList = new ArrayList<>();

        setTitle("Event Registration System");
        setSize(600, 400);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == createEventButton) {
            String eventName = eventNameField.getText();
            String date = dateField.getText();
            String time = timeField.getText();
            int maxPeople;
            try {
                maxPeople = Integer.parseInt(maxPeopleField.getText());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Invalid maximum number of people.");
                return;
            }

            // Create event here

            JOptionPane.showMessageDialog(this, "Event created successfully.");
        } else if (e.getSource() == editEventButton) {
            // Edit event here

            JOptionPane.showMessageDialog(this, "Event edited successfully.");
        } else if (e.getSource() == addGuestButton) {
            String name = nameField.getText();
            String ageStr = ageField.getText();
            String guestType = (String) guestTypeBox.getSelectedItem();
            int age;
            try {
                age = Integer.parseInt
